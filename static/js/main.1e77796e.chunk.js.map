{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","icon","faTrashAlt","cursor","day","Tasks","tasks","map","AddTasks","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","AddTask","Math","floor","random","newTask","length","filter","rootElement","document","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.1e77796e.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\r\n\r\nconst Button = ({ color, text, onClick }) => {\r\n  return (\r\n    <button\r\n      onClick={onClick}\r\n      style={{ backgroundColor: color }}\r\n      className=\"btn\"\r\n    >\r\n      {text}\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.defaultProps = {\r\n  color: \"steelblue\"\r\n};\r\n\r\nButton.propTypes = {\r\n  text: PropTypes.string,\r\n  color: PropTypes.string,\r\n  onClick: PropTypes.func\r\n};\r\n\r\nexport default Button;\r\n","import Button from \"./Button\";\r\n\r\nconst Header = ({ onAdd, showAdd }) => {\r\n  return (\r\n    <header className=\"header\">\r\n      <h1>Task Tracker</h1>\r\n      <Button\r\n        onClick={onAdd}\r\n        color={showAdd ? \"red\" : \"green\"}\r\n        text={showAdd ? \"Close\" : \"Add\"}\r\n      />\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\n\r\nconst Task = ({ task, onDelete, onToggle }) => {\r\n  return (\r\n    <div\r\n      className={`task ${task.reminder ? \"reminder\" : \"\"}`}\r\n      onDoubleClick={() => onToggle(task.id)}\r\n    >\r\n      <h3>\r\n        {task.text}{\" \"}\r\n        <FontAwesomeIcon\r\n          icon={faTrashAlt}\r\n          style={{ color: \"red\", cursor: \"pointer\" }}\r\n          onClick={() => onDelete(task.id)}\r\n        />\r\n      </h3>\r\n      <p>{task.day}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","import Task from \"./Task\";\r\n\r\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\r\n  return (\r\n    <>\r\n      {tasks.map((task) => (\r\n        <Task\r\n          key={task.id}\r\n          task={task}\r\n          onDelete={onDelete}\r\n          onToggle={onToggle}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Tasks;\r\n","import { useState } from \"react\";\r\n\r\nconst AddTasks = ({ onAdd }) => {\r\n  const [text, setText] = useState(\"\");\r\n  const [day, setDay] = useState(\"\");\r\n  const [reminder, setReminder] = useState(false);\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!text) {\r\n      alert(\"please add a task\");\r\n    }\r\n\r\n    onAdd({ text, day, reminder });\r\n\r\n    setText(\"\");\r\n    setDay(\"\");\r\n    setReminder(false);\r\n  };\r\n\r\n  return (\r\n    <form className=\"add-form\" onSubmit={onSubmit}>\r\n      <div className=\"form-control\">\r\n        <label>Task</label>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"add task\"\r\n          value={text}\r\n          onChange={(e) => setText(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className=\"form-control\">\r\n        <label>Day & Time</label>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"add day and time\"\r\n          value={day}\r\n          onChange={(e) => setDay(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className=\"form-control form-control-check\">\r\n        <label>Set Reminder</label>\r\n        <input\r\n          type=\"checkbox\"\r\n          value={reminder}\r\n          checked={reminder}\r\n          onChange={(e) => setReminder(e.currentTarget.checked)}\r\n        />\r\n      </div>\r\n      <input type=\"submit\" value=\"save task\" className=\"btn btn-block\" />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddTasks;\r\n","import { useState } from \"react\";\nimport Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport AddTask from \"./components/AddTask\";\n\nexport default function App() {\n  const [showAddTask, setShowAddTask] = useState(false);\n\n  const [tasks, setTasks] = useState([\n    {\n      id: 1,\n      text: \"Doctor's Appointment\",\n      day: \"Feb 5th at 2:30pm\",\n      reminder: true\n    },\n    {\n      id: 2,\n      text: \"Meeting\",\n      day: \"Feb 6th at 10:30am\",\n      reminder: true\n    },\n    {\n      id: 3,\n      text: \"dfgdfgdfg\",\n      day: \"Feb 11th at 9:30am\",\n      reminder: true\n    }\n  ]);\n\n  //Add task\n  const addTask = (task) => {\n    const id = Math.floor(Math.random() * 10000) + 1;\n    const newTask = { id, ...task };\n    setTasks([...tasks, newTask]);\n  };\n\n  //Delete task\n  const deleteTask = (id) => {\n    setTasks(tasks.filter((task) => task.id !== id));\n  };\n\n  //Toggle Reminder\n  const toggleReminder = (id) => {\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, reminder: !task.reminder } : task\n      )\n    );\n  };\n\n  return (\n    <div className=\"container\">\n      <Header\n        onAdd={() => setShowAddTask(!showAddTask)}\n        showAdd={showAddTask}\n      />\n      {showAddTask && <AddTask onAdd={addTask} />}\n      {tasks.length > 0 ? (\n        <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} />\n      ) : (\n        \"No tasks to show\"\n      )}\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}